{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP WORLD\\\\Desktop\\\\barter\\\\screens\\\\ReceiverDetailsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Card, Header, Icon } from 'react-native-elements';\nimport firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar RecieverDetailsScreen = function (_Component) {\n  _inherits(RecieverDetailsScreen, _Component);\n\n  var _super = _createSuper(RecieverDetailsScreen);\n\n  function RecieverDetailsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecieverDetailsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.updateBarterStatus = function () {\n      db.collection('all_Barters').add({\n        book_name: _this.state.itemName,\n        exchange_id: _this.state.exchangeId,\n        requested_by: _this.state.recieverName,\n        donor_id: _this.state.userId,\n        request_status: \"Donor Interested\"\n      });\n    };\n\n    _this.addNotification = function () {\n      var message = _this.state.userName + \" has shown interest in donating the book\";\n      db.collection(\"all_notifications\").add({\n        targeted_user_id: _this.state.recieverId,\n        donor_id: _this.state.userId,\n        item_name: _this.state.itemName,\n        date: firebase.firestore.FieldValue.serverTimestamp(),\n        notification_status: \"unread\",\n        message: message\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      recieverId: _this.props.navigation.getParam('details')[\"user_id\"],\n      exchangeId: _this.props.navigation.getParam('details')[\"exchangeId\"],\n      itemName: _this.props.navigation.getParam('details')[\"item_name\"],\n      requestId: _this.props.navigation.getParam(\"details\")[\"exchangeId\"],\n      description: _this.props.navigation.getParam('details')[\"description\"],\n      recieverName: '',\n      recieverContact: '',\n      recieverAddress: '',\n      recieverRequestDocId: ''\n    };\n    return _this;\n  }\n\n  _createClass(RecieverDetailsScreen, [{\n    key: \"getRecieverDetails\",\n    value: function getRecieverDetails() {\n      var _this2 = this;\n\n      db.collection('users').where('user_id', '==', this.state.recieverId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this2.setState({\n            recieverName: doc.data().first_name,\n            recieverContact: doc.data().mobile_number,\n            recieverAddress: doc.data().address\n          });\n        });\n      });\n      db.collection('exchange_requests').where('exchangeId', '==', this.state.exchangeId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this2.setState({\n            recieverRequestDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRecieverDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(Header, {\n        leftComponent: React.createElement(Icon, {\n          name: \"arrow-left\",\n          type: \"feather\",\n          color: \"#696969\",\n          onPress: function onPress() {\n            return _this3.props.navigation.goBack();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }\n        }),\n        centerComponent: {\n          text: \"Exchange Items\",\n          style: {\n            color: '#90A5A9',\n            fontSize: 20,\n            fontWeight: \"bold\"\n          }\n        },\n        backgroundColor: \"#eaf8fe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(Card, {\n        title: \"Item Information\",\n        titleStyle: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, \"Name : \", this.state.itemName)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \"Reason : \", this.state.description)))), React.createElement(View, {\n        style: {\n          flex: 0.3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, React.createElement(Card, {\n        title: \"Reciever Information\",\n        titleStyle: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Name: \", this.state.recieverName)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Contact: \", this.state.recieverContact)), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"Address: \", this.state.recieverAddress)))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, this.state.recieverId !== this.state.userId ? React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this3.addNotification();\n\n          _this3.updateBarterStatus();\n\n          _this3.props.navigation.navigate('MyBarters');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, \"I want to Exchange\")) : null));\n    }\n  }]);\n\n  return RecieverDetailsScreen;\n}(Component);\n\nexport { RecieverDetailsScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 0.3,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    width: 200,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: 'orange',\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/HP WORLD/Desktop/barter/screens/ReceiverDetailsScreen.js"],"names":["React","Component","Card","Header","Icon","firebase","db","RecieverDetailsScreen","props","updateBarterStatus","collection","add","book_name","state","itemName","exchange_id","exchangeId","requested_by","recieverName","donor_id","userId","request_status","addNotification","message","userName","targeted_user_id","recieverId","item_name","date","firestore","FieldValue","serverTimestamp","notification_status","auth","currentUser","email","navigation","getParam","requestId","description","recieverContact","recieverAddress","recieverRequestDocId","where","get","then","snapshot","forEach","doc","setState","data","first_name","mobile_number","address","id","getRecieverDetails","styles","container","flex","goBack","text","style","color","fontSize","fontWeight","buttonContainer","button","navigate","StyleSheet","create","justifyContent","alignItems","width","height","borderRadius","backgroundColor","shadowColor","shadowOffset","elevation"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport {View,Text,StyleSheet,TouchableOpacity} from 'react-native';\nimport{Card,Header,Icon} from 'react-native-elements';\nimport firebase from 'firebase';\n\nimport db from '../config.js';\n\nexport default class RecieverDetailsScreen extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      userId          : firebase.auth().currentUser.email,\n      recieverId      : this.props.navigation.getParam('details')[\"user_id\"],\n      exchangeId       : this.props.navigation.getParam('details')[\"exchangeId\"],\n      itemName        : this.props.navigation.getParam('details')[\"item_name\"],\n      requestId: this.props.navigation.getParam(\"details\")[\"exchangeId\"],\n      description  : this.props.navigation.getParam('details')[\"description\"],\n      recieverName    : '',\n      recieverContact : '',\n      recieverAddress : '',\n      recieverRequestDocId : ''\n    }\n  }\n\n\n\ngetRecieverDetails(){\n  db.collection('users').where('user_id','==',this.state.recieverId).get()\n  .then(snapshot=>{\n    snapshot.forEach(doc=>{\n      this.setState({\n        recieverName    : doc.data().first_name,\n        recieverContact : doc.data().mobile_number,\n        recieverAddress : doc.data().address,\n      })\n    })\n  });\n\n  db.collection('exchange_requests').where('exchangeId','==',this.state.exchangeId).get()\n  .then(snapshot=>{\n    snapshot.forEach(doc => {\n      this.setState({recieverRequestDocId:doc.id})\n   })\n})}\n\nupdateBarterStatus=()=>{\n  db.collection('all_Barters').add({\n    book_name           : this.state.itemName,\n    exchange_id          : this.state.exchangeId,\n    requested_by        : this.state.recieverName,\n    donor_id            : this.state.userId,\n    request_status      :  \"Donor Interested\"\n  })\n}\n\naddNotification = () => {\n  var message =\n    this.state.userName + \" has shown interest in donating the book\";\n  db.collection(\"all_notifications\").add({\n    targeted_user_id: this.state.recieverId,\n    donor_id: this.state.userId,\n    //request_id: this.state.requestId,\n    item_name: this.state.itemName,\n    date: firebase.firestore.FieldValue.serverTimestamp(),\n    notification_status: \"unread\",\n    message: message,\n  });\n};\n\ncomponentDidMount(){\n  this.getRecieverDetails()\n}\n\n\n  render(){\n    return(\n      <View style={styles.container}>\n        <View style={{flex:0.1}}>\n          <Header\n            leftComponent ={<Icon name='arrow-left' type='feather' color='#696969'  onPress={() => this.props.navigation.goBack()}/>}\n            centerComponent={{ text:\"Exchange Items\", style: { color: '#90A5A9', fontSize:20,fontWeight:\"bold\", } }}\n            backgroundColor = \"#eaf8fe\"\n          />\n        </View>\n        <View style={{flex:0.3}}>\n          <Card\n              title={\"Item Information\"}\n              titleStyle= {{fontSize : 20}}\n            >\n            <Card >\n              <Text style={{fontWeight:'bold'}}>Name : {this.state.itemName}</Text>\n            </Card>\n            <Card>\n              <Text style={{fontWeight:'bold'}}>Reason : {this.state.description}</Text>\n            </Card>\n          </Card>\n        </View>\n        <View style={{flex:0.3}}>\n          <Card\n            title={\"Reciever Information\"}\n            titleStyle= {{fontSize : 20}}\n            >\n            <Card>\n              <Text style={{fontWeight:'bold'}}>Name: {this.state.recieverName}</Text>\n            </Card>\n            <Card>\n              <Text style={{fontWeight:'bold'}}>Contact: {this.state.recieverContact}</Text>\n            </Card>\n            <Card>\n              <Text style={{fontWeight:'bold'}}>Address: {this.state.recieverAddress}</Text>\n            </Card>\n          </Card>\n        </View>\n        <View style={styles.buttonContainer}>\n          {\n            this.state.recieverId !== this.state.userId\n            ?(\n              <TouchableOpacity\n                  style={styles.button}\n                  onPress={()=>{\n                    this.addNotification()\n                    this.updateBarterStatus()\n                    this.props.navigation.navigate('MyBarters')\n                  }}>\n                <Text>I want to Exchange</Text>\n              </TouchableOpacity>\n            )\n            : null\n          }\n        </View>\n      </View>\n    )\n  }\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n  },\n  buttonContainer : {\n    flex:0.3,\n    justifyContent:'center',\n    alignItems:'center'\n  },\n  button:{\n    width:200,\n    height:50,\n    justifyContent:'center',\n    alignItems : 'center',\n    borderRadius: 10,\n    backgroundColor: 'orange',\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8\n     },\n    elevation : 16\n  }\n})\n"]},"metadata":{},"sourceType":"module"}